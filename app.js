// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–∏–∑–∏—Ç–∫–∏
const clientData = {
    name: "–î–º–∏—Ç—Ä–∏–π –ú–∞–ª—ã—à–µ–≤",
    description: "–ü–æ–º–æ–≥–∞—é –±–∏–∑–Ω–µ—Å—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –ø—Ä–∏–±—ã–ª—å | –≠–∫–æ–Ω–æ–º–ª—é –≤–∞—à–µ –≤—Ä–µ–º—è –∏ —Ä–µ—Å—É—Ä—Å—ã",
    avatar: "home.png",
    socialLinks: [
        { name: "telegram", url: "https://t.me/developer_telegrams", icon: "ü§ñ" },
    ],
    skills: [
        "Telegram –±–æ—Ç—ã",
        "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã",
        "API —Å–µ—Ä–≤–∏—Å—ã",
        "Android –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
        "–ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–æ–≤",
        "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–∞–π—Ç–æ–≤",
        "–°–∞–π—Ç—ã",
        "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ò–ò"
    ]
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;
tg.expand();

// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
const elements = {
    name: document.getElementById('name'),
    description: document.getElementById('description'),
    avatar: document.getElementById('avatar'),
    socialLinks: document.getElementById('socialLinks'),
    telegramBtn: document.getElementById('telegramBtn'),
    themeToggle: document.getElementById('themeToggle'),
    skillsGrid: document.getElementById('skillsGrid'),
    telegramGreeting: document.getElementById('telegramGreeting')
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ DOM
function setData() {
    elements.name.textContent = clientData.name;
    elements.description.textContent = clientData.description;
    elements.avatar.src = clientData.avatar;
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    clientData.socialLinks.forEach(link => {
        const a = document.createElement('a');
        a.href = link.url;
        a.className = 'social-link';
        a.innerHTML = link.icon;
        a.target = '_blank';
        a.addEventListener('click', () => {
            trackVisit(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –≤ ${link.name}`);
        });
        elements.socialLinks.appendChild(a);
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤
    clientData.skills.forEach(skill => {
        const div = document.createElement('div');
        div.className = 'skill-item';
        div.textContent = skill;
        div.addEventListener('click', () => {
            trackVisit(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –Ω–∞–≤—ã–∫–æ–º: ${skill}`);
        });
        elements.skillsGrid.appendChild(div);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–º—ã
function initTheme() {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);
    updateThemeIcon(savedTheme);
}

function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateThemeIcon(newTheme);
    trackVisit(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–º–µ–Ω–∏–ª —Ç–µ–º—É –Ω–∞ ${newTheme}`);
}

function updateThemeIcon(theme) {
    const icon = elements.themeToggle.querySelector('.theme-icon');
    icon.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–µ—â–µ–Ω–∏–∏
async function trackVisit(action) {
    try {
        const user = tg.initDataUnsafe.user;
        const visitData = {
            user_id: user?.id || '–Ω–µ —É–∫–∞–∑–∞–Ω',
            username: user?.username ? `@${user.username}` : '–Ω–µ —É–∫–∞–∑–∞–Ω',
            first_name: user?.first_name || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ',
            last_name: user?.last_name || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ',
            source: "telegram_webapp",
            action: action,
            timestamp: new Date().toISOString(),
            platform: user ? 'Telegram' : '–í–µ–±-–±—Ä–∞—É–∑–µ—Ä',
            has_telegram_data: !!user
        };

        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö:', visitData);

        const response = await fetch('https://dima-razrab.ru/visits', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(visitData)
        });

        console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        const responseData = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', responseData);

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
            message: error.message,
            stack: error.stack
        });
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Telegram Web App
function initTelegram() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App');
    console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', tg.initDataUnsafe.user);
    
    if (tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        const greeting = `–ü—Ä–∏–≤–µ—Ç, ${user.first_name}!`;
        elements.telegramBtn.textContent = greeting;
        
        if (user.username) {
            console.log(`Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${user.username}`);
            localStorage.setItem('tg_username', user.username);
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏
        trackVisit('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫—Ä—ã–ª –≤–∏–∑–∏—Ç–∫—É');
    }
    
    elements.telegramBtn.addEventListener('click', () => {
        console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Telegram');
        trackVisit('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram"');
        tg.close();
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function init() {
    setData();
    initTheme();
    initTelegram();
    
    elements.themeToggle.addEventListener('click', toggleTheme);

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º
    document.querySelectorAll('.btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const btnText = btn.textContent.trim();
            trackVisit(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: ${btnText}`);
        });
    });
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', init); 